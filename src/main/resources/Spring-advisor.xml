<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-lazy-init="true">
    <bean id="userServiceImpl" class="pers.yoko.aopdemo.service.impl.UserServiceImpl"/>
    <bean id="deptServiceImpl" class="pers.yoko.aopdemo.service.impl.DeptServiceImpl"/>

    <!-- 定义advice -->
    <bean id="logArgsAdvice" class="pers.yoko.aopdemo.advice.LogArgsAdvice"/>
    <bean id="logResultAdvice" class="pers.yoko.aopdemo.advice.LogResutlAdvice"/>

    <!-- 定义一个advisor1 -->
    <bean id = "logCreateAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <!-- advisor实例的内部会有一个advice -->
        <property name="advice" ref="logArgsAdvice"/>
        <!-- 只有下面2个方法才会被拦截 -->
        <property name="mappedNames" value="createDept,insertUser"/>
    </bean>

    <!-- 定义一个advisor2 -->
    <bean id = "logCreateAdvisor2" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <!-- advisor实例的内部会有一个advice -->
        <property name="advice" ref="logResultAdvice"/>
        <!-- 只有下面2个方法才会被拦截 -->
        <property name="mappedNames" value="createDept,insertUser"/>
    </bean>

    <bean id="userServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 代理的接口 -->
        <property name="proxyInterfaces">
            <list>
                <value>pers.yoko.aopdemo.service.UserService</value>
            </list>
        </property>
        <!-- 代理的具体实现 -->
        <property name="target" ref="userServiceImpl"/>
        <!-- 配置拦截器，这里可以配置advice、advisor、interceptor -->
        <property name="interceptorNames">
            <list>
                <!-- advisor -->
                <value>logCreateAdvisor</value>
                <value>logCreateAdvisor2</value>
            </list>
        </property>
    </bean>
    <bean id="deptServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- 代理的接口 -->
        <property name="proxyInterfaces">
            <list>
                <value>pers.yoko.aopdemo.service.DeptService</value>
            </list>
        </property>
        <!-- 代理的具体实现 -->
        <property name="target" ref="deptServiceImpl"/>
        <!-- 配置拦截器，这里可以配置advice、advisor、interceptor -->
        <property name="interceptorNames">
            <list>
                <!-- advisor -->
                <value>logCreateAdvisor</value>
                <value>logCreateAdvisor2</value>
            </list>
        </property>
    </bean>
</beans>